Ques: You are given an array prices where prices[i] is the price of a given stock on the ith day. 
You want to maximize your profit by choosin a single day to buy one stock and choosing a different 
day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. 
If you cannot achieve any profit, return 0.

Ans: (Bruteforce Solution to the problem)

public static int StocksProfit(int [] arr) {
        
        int maxProfit = 0;
        int curProfit;
        
        for (int i = 0; i < arr.length-1; i++) {
            for (int j = 1; j < arr.length; j++){
                curProfit = arr[j] - arr[i];
                if (curProfit > maxProfit) {
                    maxProfit = curProfit;
                }
            }
        }
        return maxProfit;
  }
  
  
  (Optimized Approach) 
  
  public static int StocksProfit(int [] arr) {
        
        int buyingPrice = arr[0];
        int maxProfit = 0;
        
        for (int i = 0; i < arr.length; i++) {
            if (buyingPrice < arr[i]) {
                int curProfit = arr[i] - buyingPrice;
                if (curProfit > maxProfit) {
                    maxProfit = curProfit;
                }
            } else {
                buyingPrice = arr[i];
                // updating the price to make profits in the future 
                // similar to what if I buy stock today
            }
        }
        return maxProfit;
    }
